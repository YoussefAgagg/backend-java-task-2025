{
  "info": {
    "_postman_id": "ca8cc5e5-e45c-461e-919c-2f8074e3574e",
    "name": "E-commerce",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "22558194",
    "_collection_link": "https://gold-shuttle-901035.postman.co/workspace/trade-lyft~7a99182d-5afc-41b5-8d30-939a44de49ef/collection/22558194-ca8cc5e5-e45c-461e-919c-2f8074e3574e?action=share&source=collection_link&creator=22558194"
  },
  "item": [
    {
      "name": "E-commerce Auth API",
      "item": [
        {
          "name": "Register User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"username\": \"johndoe\",\n    \"email\": \"john.doe@example.com\",\n    \"phone\": \"+201234567890\",\n    \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "register"
              ]
            },
            "description": "Register a new user in the system"
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (jsonData && jsonData.accessToken) {",
                  "    pm.environment.set('accessToken', jsonData.accessToken);",
                  "    pm.environment.set('tokenType', jsonData.tokenType);",
                  "    pm.environment.set('currentUsername', jsonData.username);",
                  "    console.log('Token saved to environment variables');",
                  "}"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"johndoe\",\n    \"password\": \"newPassword456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ]
            },
            "description": "Authenticate a user and receive access token"
          },
          "response": []
        }
      ]
    },
    {
      "name": "E-commerce User API",
      "item": [
        {
          "name": "Get Current User Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "me"
              ]
            },
            "description": "Retrieves the profile information of the currently authenticated user"
          },
          "response": []
        },
        {
          "name": "Update Current User Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"firstName\": \"Updated\",\n    \"lastName\": \"Name\",\n    \"email\": \"updated.email@example.com\",\n    \"phone\": \"+19876543210\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/me",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "me"
              ]
            },
            "description": "Updates the profile information of the currently authenticated user"
          },
          "response": []
        },
        {
          "name": "Change Password",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"currentPassword\": \"password123\",\n    \"newPassword\": \"newPassword456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/users/change-password",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "users",
                "change-password"
              ]
            },
            "description": "Changes the password for the currently authenticated user"
          },
          "response": []
        }
      ]
    },
    {
      "name": "E-commerce Product Admin API",
      "item": [
        {
          "name": "Login ADMIN",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (jsonData && jsonData.accessToken) {",
                  "    pm.environment.set('accessToken', jsonData.accessToken);",
                  "    pm.environment.set('tokenType', jsonData.tokenType);",
                  "    pm.environment.set('currentUsername', jsonData.username);",
                  "    console.log('Token saved to environment variables');",
                  "}"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ]
            },
            "description": "Authenticate a user and receive access token"
          },
          "response": []
        },
        {
          "name": "Create Product",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Premium Headphones\",\n    \"description\": \"High-quality noise-cancelling headphones with premium sound\",\n    \"price\": 199.99,\n    \"quantity\": 50\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/products",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "products"
              ]
            },
            "description": "Creates a new product with initial inventory"
          },
          "response": []
        },
        {
          "name": "Update Product",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Premium Headphones XL\",\n    \"description\": \"Updated description: High-quality noise-cancelling headphones with premium sound and extra bass\",\n    \"price\": 249.99,\n    \"quantity\": 45\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/products/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "products",
                "{{productId}}"
              ]
            },
            "description": "Updates an existing product by ID"
          },
          "response": []
        },
        {
          "name": "Delete Product",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/products/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "products",
                "{{productId}}"
              ]
            },
            "description": "Deletes a product by ID"
          },
          "response": []
        },
        {
          "name": "Update Product Inventory",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"id\":1,\n    \"quantity\": 75,\n    \"reservedQuantity\": 5,\n    \"productId\":{{productId}}\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/products/{{productId}}/inventory",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "products",
                "{{productId}}",
                "inventory"
              ]
            },
            "description": "Updates the inventory for a specific product"
          },
          "response": []
        },
        {
          "name": "Get Low Stock Alerts",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/products/inventory/low-stock?threshold={{lowStockThreshold}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "products",
                "inventory",
                "low-stock"
              ],
              "query": [
                {
                  "key": "threshold",
                  "value": "{{lowStockThreshold}}"
                }
              ]
            },
            "description": "Retrieves a list of products with inventory below the specified threshold"
          },
          "response": []
        },
        {
          "name": "Create Product with Response",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (jsonData && jsonData.id) {",
                  "    pm.environment.set('productId', jsonData.id);",
                  "    console.log('Product ID saved to environment variables: ' + jsonData.id);",
                  "}"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"name\": \"Smart Watch Pro\",\n    \"description\": \"Advanced smartwatch with health monitoring features\",\n    \"price\": 299.99,\n    \"quantity\": 30\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/products",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "products"
              ]
            },
            "description": "Creates a new product and saves the product ID to environment variables"
          },
          "response": []
        }
      ]
    },
    {
      "name": "E-commerce Product API",
      "item": [
        {
          "name": "Get All Products",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/products?page=0&size=10&sort=id",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "products"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (0-based)"
                },
                {
                  "key": "size",
                  "value": "10",
                  "description": "Number of items per page"
                },
                {
                  "key": "name",
                  "value": "",
                  "description": "Optional filter by product name",
                  "disabled": true
                },
                {
                  "key": "sort",
                  "value": "id"
                }
              ]
            },
            "description": "Retrieves a paginated list of all products"
          },
          "response": []
        },
        {
          "name": "Get Products By Name",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/products?page=0&size=10&sort=name,asc&name={{searchProductName}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "products"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (0-based)"
                },
                {
                  "key": "size",
                  "value": "10",
                  "description": "Number of items per page"
                },
                {
                  "key": "sort",
                  "value": "name,asc",
                  "description": "Sort property and direction"
                },
                {
                  "key": "name",
                  "value": "{{searchProductName}}",
                  "description": "Filter by product name"
                }
              ]
            },
            "description": "Retrieves a paginated list of products filtered by name"
          },
          "response": []
        },
        {
          "name": "Get Product By ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Store product information if needed for other requests",
                  "var jsonData = pm.response.json();",
                  "if (jsonData && jsonData.id) {",
                  "    pm.environment.set('lastViewedProductId', jsonData.id);",
                  "    pm.environment.set('lastViewedProductName', jsonData.name);",
                  "    console.log('Product info saved to environment variables');",
                  "}"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/products/{{productId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "products",
                "{{productId}}"
              ]
            },
            "description": "Retrieves a specific product by its ID"
          },
          "response": []
        },
        {
          "name": "Get Product Inventory",
          "request": {
            "auth": {
              "type": "noauth"
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/products/{{productId}}/inventory",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "products",
                "{{productId}}",
                "inventory"
              ]
            },
            "description": "Retrieves inventory information for a specific product"
          },
          "response": []
        }
      ]
    },
    {
      "name": "E-commerce Order API",
      "item": [
        {
          "name": "Create Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (jsonData && jsonData.id) {",
                  "    pm.environment.set('orderId', jsonData.id);",
                  "    console.log('Order ID saved to environment variables: ' + jsonData.id);",
                  "}"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Generate unique idempotency key if not already set",
                  "if (!pm.environment.get('idempotencyKey')) {",
                  "    var uuid = require('uuid');",
                  "    pm.environment.set('idempotencyKey', uuid.v4());",
                  "    console.log('Generated idempotency key: ' + pm.environment.get('idempotencyKey'));",
                  "}"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"idempotencyKey\": \"{{$randomUUID}}\",\n    \"orderItems\": [\n        {\n            \"productId\": {{productId}},\n            \"quantity\": 10\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "orders"
              ]
            },
            "description": "Creates a new order with the specified items"
          },
          "response": []
        },
        {
          "name": "Create Order Copy",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (jsonData && jsonData.id) {",
                  "    pm.environment.set('orderId', jsonData.id);",
                  "    console.log('Order ID saved to environment variables: ' + jsonData.id);",
                  "}"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Generate unique idempotency key if not already set",
                  "if (!pm.environment.get('idempotencyKey')) {",
                  "    var uuid = require('uuid');",
                  "    pm.environment.set('idempotencyKey', uuid.v4());",
                  "    console.log('Generated idempotency key: ' + pm.environment.get('idempotencyKey'));",
                  "}"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"idempotencyKey\": \"{{$randomUUID}}\",\n    \"orderItems\": [\n        {\n            \"productId\": {{productId}},\n            \"quantity\": {{itemQuantity}}\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "orders"
              ]
            },
            "description": "Creates a new order with the specified items"
          },
          "response": []
        },
        {
          "name": "Get All Orders",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/orders?page=0&size=10&sort=createdDate,desc",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "orders"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (0-based)"
                },
                {
                  "key": "size",
                  "value": "10",
                  "description": "Number of items per page"
                },
                {
                  "key": "sort",
                  "value": "createdDate,desc",
                  "description": "Sort property and direction"
                },
                {
                  "key": "status",
                  "value": "",
                  "description": "Filter by order status (PENDING, CONFIRMED, SHIPPED, DELIVERED, CANCELLED)",
                  "disabled": true
                }
              ]
            },
            "description": "Retrieves all orders for the current user with pagination"
          },
          "response": []
        },
        {
          "name": "Get Orders By Status",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/orders?page=0&size=10&sort=createdDate,desc&status={{orderStatus}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "orders"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (0-based)"
                },
                {
                  "key": "size",
                  "value": "10",
                  "description": "Number of items per page"
                },
                {
                  "key": "sort",
                  "value": "createdDate,desc",
                  "description": "Sort property and direction"
                },
                {
                  "key": "status",
                  "value": "{{orderStatus}}",
                  "description": "Filter by order status"
                }
              ]
            },
            "description": "Retrieves orders filtered by status for the current user"
          },
          "response": []
        },
        {
          "name": "Get Order By ID",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/orders/{{orderId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "orders",
                "{{orderId}}"
              ]
            },
            "description": "Retrieves a specific order by its ID"
          },
          "response": []
        },
        {
          "name": "Cancel Order",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/orders/{{orderId}}/cancel",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "orders",
                "{{orderId}}",
                "cancel"
              ]
            },
            "description": "Cancels an existing order"
          },
          "response": []
        },
        {
          "name": "Get Order Status",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/orders/{{orderId}}/status",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "orders",
                "{{orderId}}",
                "status"
              ]
            },
            "description": "Retrieves the current status of an order"
          },
          "response": []
        },
        {
          "name": "Create Complex Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (jsonData && jsonData.id) {",
                  "    pm.environment.set('orderId', jsonData.id);",
                  "    console.log('Order ID saved to environment variables: ' + jsonData.id);",
                  "}"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            },
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Generate unique idempotency key",
                  "var uuid = require('uuid');",
                  "pm.environment.set('idempotencyKey', uuid.v4());",
                  "console.log('Generated new idempotency key: ' + pm.environment.get('idempotencyKey'));"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"idempotencyKey\": \"{{idempotencyKey}}\",\n    \"orderItems\": [\n        {\n            \"productId\": {{productId}},\n            \"quantity\": 2\n        },\n        {\n            \"productId\": {{productId2}},\n            \"quantity\": 1\n        }\n    ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "orders"
              ]
            },
            "description": "Creates a new order with multiple items"
          },
          "response": []
        }
      ]
    },
    {
      "name": "E-commerce Order Admin API",
      "item": [
        {
          "name": "Login admin",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (jsonData && jsonData.accessToken) {",
                  "    pm.environment.set('accessToken', jsonData.accessToken);",
                  "    pm.environment.set('tokenType', jsonData.tokenType);",
                  "    pm.environment.set('currentUsername', jsonData.username);",
                  "    console.log('Token saved to environment variables');",
                  "}"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"username\": \"admin\",\n    \"password\": \"admin\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "auth",
                "login"
              ]
            },
            "description": "Authenticate a user and receive access token"
          },
          "response": []
        },
        {
          "name": "Get All Orders (Admin)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/orders?page=0&size=20&sort=createdDate,desc",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "orders"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (0-based)"
                },
                {
                  "key": "size",
                  "value": "20",
                  "description": "Number of items per page"
                },
                {
                  "key": "sort",
                  "value": "createdDate,desc",
                  "description": "Sort property and direction"
                },
                {
                  "key": "status",
                  "value": "",
                  "description": "Filter by order status (PENDING, PAID, PROCESSING, SHIPPED, DELIVERED, CANCELLED)",
                  "disabled": true
                }
              ]
            },
            "description": "Retrieves all orders across all users with pagination (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Orders By Status (Admin)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/orders?page=0&size=20&sort=createdDate,desc&status={{adminOrderStatus}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "orders"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "0",
                  "description": "Page number (0-based)"
                },
                {
                  "key": "size",
                  "value": "20",
                  "description": "Number of items per page"
                },
                {
                  "key": "sort",
                  "value": "createdDate,desc",
                  "description": "Sort property and direction"
                },
                {
                  "key": "status",
                  "value": "{{adminOrderStatus}}",
                  "description": "Filter by order status"
                }
              ]
            },
            "description": "Retrieves all orders filtered by status across all users (admin only)"
          },
          "response": []
        },
        {
          "name": "Update Order Status (Admin)",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/orders/{{orderId}}/status?status={{newOrderStatus}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "orders",
                "{{orderId}}",
                "status"
              ],
              "query": [
                {
                  "key": "status",
                  "value": "{{newOrderStatus}}",
                  "description": "New status for the order"
                }
              ]
            },
            "description": "Updates the status of an order (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Daily Sales Report (Current day)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Calculate dates for current month",
                  "var moment = require('moment');",
                  "",
                  "// Start date is first day of current month",
                  "var startDate = moment().startOf('month').format('YYYY-MM-DD');",
                  "pm.environment.set('reportStartDate', startDate);",
                  "",
                  "// End date is today",
                  "var endDate = moment().format('YYYY-MM-DD');",
                  "pm.environment.set('reportEndDate', endDate);",
                  "",
                  "console.log(`Set date range for current month: ${startDate} to ${endDate}`);"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/reports/daily",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "reports",
                "daily"
              ]
            },
            "description": "Retrieves daily sales report for the current month (admin only)"
          },
          "response": []
        },
        {
          "name": "Get Daily Sales Report",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/admin/reports/daily?startDate=2025-06-08&endDate=2025-06-11",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "admin",
                "reports",
                "daily"
              ],
              "query": [
                {
                  "key": "startDate",
                  "value": "2025-06-08",
                  "description": "Start date for the report (YYYY-MM-DD)"
                },
                {
                  "key": "endDate",
                  "value": "2025-06-11",
                  "description": "End date for the report (YYYY-MM-DD)"
                }
              ]
            },
            "description": "Retrieves daily sales report for a date range (admin only)"
          },
          "response": []
        }
      ]
    }
  ]
}